name: Deploy to Itch.io

on:
  workflow_dispatch:

env:
  PROJECT_NAME: "modded-player-demo" # Update if needed
  BUTLER_API_KEY: ${{ secrets.ITCHIO_TOKEN }}
  ITCHIO_USERNAME: ${{ secrets.ITCHIO_USERNAME }}
  GODOT_VERSION: "4.3-stable" # Change this when a new version is released

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Cache Export Templates
        uses: actions/cache@v4
        with:
          path: ~/.local/share/godot/export_templates/${{ env.GODOT_VERSION }}
          key: godot-templates-${{ env.GODOT_VERSION }}

      - name: Download Godot Binary
        run: |
          echo "Downloading Godot ${GODOT_VERSION}..."
          URL="https://downloads.tuxfamily.org/godotengine/${GODOT_VERSION}/Godot_v${GODOT_VERSION}_linux.x86_64.zip"
          curl -L -o godot.zip "$URL"

          if ! file godot.zip | grep -q 'Zip archive data'; then
            echo "Godot download failed — check version or URL."
            exit 1
          fi

          unzip -q godot.zip
          mv Godot_v*_linux.x86_64 godot
          chmod +x godot
          echo "Godot binary ready."

      - name: Download Export Templates
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo "Downloading export templates for ${GODOT_VERSION}..."
          URL="https://downloads.tuxfamily.org/godotengine/${GODOT_VERSION}/Godot_v${GODOT_VERSION}_export_templates.tpz"
          curl -L -o export_templates.tpz "$URL"

          if ! file export_templates.tpz | grep -q 'Zip archive data'; then
            echo "Templates download failed — check version or URL."
            exit 1
          fi

          unzip -q export_templates.tpz
          mkdir -p ~/.local/share/godot/export_templates/${GODOT_VERSION}
          mv templates/* ~/.local/share/godot/export_templates/${GODOT_VERSION}/ || true
          echo "Export templates installed."

      - name: Build HTML Export
        run: |
          ./godot --headless --export-release "html" "exports/html/index.html"

      - name: Zip HTML Export
        run: |
          cd exports/html
          zip -qr "../${PROJECT_NAME}-html.zip" .
          cd -

      - name: Upload Export Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: exports
          path: exports

  Publish:
    needs: Build
    runs-on: ubuntu-latest

    steps:
      - name: Download Export Artifacts
        uses: actions/download-artifact@v4
        with:
          name: exports
          path: exports

      - name: Download Butler
        run: |
          echo "Downloading Butler..."
          curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
          unzip -q butler.zip
          chmod +x butler
          ./butler -V

      - name: Login To Butler
        run: ./butler login

      - name: Push To Itch.io
        run: |
          echo "Uploading to Itch.io..."
          ./butler push ./exports/${PROJECT_NAME}-html.zip ${ITCHIO_USERNAME}/${PROJECT_NAME}:html
